<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\softserve\dreamspark\visual studio\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Namespaces>
  <Namespace Name="WorldofWords">
   <Messages>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.App_Start">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WorldofWords.App_Start' with another namespace.</Issue>
    </Message>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.App_Start'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'WorldofWords.App_Start'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Areas.HelpPage">
   <Messages>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Areas.HelpPage'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Areas.HelpPage.Controllers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WorldofWords.Areas.HelpPage.Controllers' with another namespace.</Issue>
    </Message>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Areas.HelpPage.Controllers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Areas.HelpPage.ModelDescriptions">
   <Messages>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Areas.HelpPage.ModelDescriptions'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Areas.HelpPage.Models">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WorldofWords.Areas.HelpPage.Models' with another namespace.</Issue>
    </Message>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Areas.HelpPage.Models'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Controllers">
   <Messages>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Controllers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Models">
   <Messages>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Models'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Providers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WorldofWords.Providers' with another namespace.</Issue>
    </Message>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Providers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Results">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WorldofWords.Results' with another namespace.</Issue>
    </Message>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Results'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="WorldofWords.Utils">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'WorldofWords.Utils' with another namespace.</Issue>
    </Message>
    <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Utils' in namespace name 'WorldofWords.Utils'.</Issue>
    </Message>
    <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in namespace name 'WorldofWords.Utils'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\bin\WorldofWords.dll">
   <Modules>
    <Module Name="worldofwords.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'WorldofWords.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="Worldof" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Worldof' in assembly name 'WorldofWords.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'WorldofWords.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="WorldofWords">
       <Types>
        <Type Name="ApplicationUserManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1&lt;WorldofWords.ApplicationUserManager&gt;,Microsoft.Owin.IOwinContext)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="IdentityConfig.cs" Line="22">In method 'ApplicationUserManager.Create(IdentityFactoryOptions&lt;ApplicationUserManager&gt;, IOwinContext)', object 'manager' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'manager' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="IdentityConfig.cs" Line="22">In method 'ApplicationUserManager.Create(IdentityFactoryOptions&lt;ApplicationUserManager&gt;, IOwinContext)', call System.IDisposable.Dispose on object 'new UserStore&lt;ApplicationUser&gt;(OwinContextExtensions.Get&lt;ApplicationDbContext&gt;(context))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="IdentityConfig.cs" Line="41">In externally visible method 'ApplicationUserManager.Create(IdentityFactoryOptions&lt;ApplicationUserManager&gt;, IOwinContext)', validate parameter 'options' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BundleConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'BundleConfig' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RegisterBundles(System.Web.Optimization.BundleCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bundles" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="BundleConfig.cs" Line="9">Parameter 'bundles' of 'BundleConfig.RegisterBundles(BundleCollection)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FilterConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'FilterConfig' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="FilterConfig.cs" Line="9">In externally visible method 'FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)', validate parameter 'filters' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HttpMessageHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckAndGenerateIdentity(System.Net.Http.HttpRequestMessage)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="HttpMessageHandler.cs" Line="48">In method 'HttpMessageHandler.CheckAndGenerateIdentity(HttpRequestMessage)', call System.IDisposable.Dispose on object 'HttpRequestMessageExtensions.CreateErrorResponse(request, HttpStatusCode.NotFound, MessagesContainer.UserNotFound)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckDataFromRequest()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="HttpMessageHandler.cs" Line="92">In method 'HttpMessageHandler.CheckDataFromRequest()', object '&lt;&gt;g__initLocal4' is not disposed along all exception paths. Call System.IDisposable.Dispose on object '&lt;&gt;g__initLocal4' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RouteConfig' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#RegisterRoutes(System.Web.Routing.RouteCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="RouteConfig.cs" Line="15">In externally visible method 'RouteConfig.RegisterRoutes(RouteCollection)', validate parameter 'routes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Startup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConfigureAuth(Owin.IAppBuilder)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="Startup.Auth.cs" Line="20">Correct the spelling of 'Auth' in member name 'Startup.ConfigureAuth(IAppBuilder)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="Startup.Auth.cs" Line="20">The 'this' parameter (or 'Me' in Visual Basic) of 'Startup.ConfigureAuth(IAppBuilder)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OAuthOptions" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Auth' in member name 'Startup.OAuthOptions' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebApiApplication" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'WebApiApplication'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Application_Start()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords" File="Global.asax.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'WebApiApplication.Application_Start()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WebApiConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'WebApiConfig'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Register(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="WebApiConfig.cs" Line="18">In externally visible method 'WebApiConfig.Register(HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WowAuthorization" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'WowAuthorization' to end in 'Attribute'.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">Even though attribute 'WowAuthorization' inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AllRoles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="WowAuthorization.cs" Line="17">Change 'WowAuthorization.AllRoles' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnAuthorization(System.Web.Http.Controllers.HttpActionContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="WowAuthorization.cs" Line="36">In externally visible method 'WowAuthorization.OnAuthorization(HttpActionContext)', validate parameter 'actionContext' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.App_Start">
       <Types>
        <Type Name="UnityConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'UnityConfig' is coupled with 81 different types from 14 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'UnityConfig' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="UnityConfig.cs" Line="26">In method 'UnityConfig.UnityConfig()', object 'container' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'container' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetConfiguredContainer()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="UnityConfig.cs" Line="35">Change 'UnityConfig.GetConfiguredContainer()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterTypes(Microsoft.Practices.Unity.IUnityContainer)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="90" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\App_Start" File="UnityConfig.cs" Line="45">'UnityConfig.RegisterTypes(IUnityContainer)' is coupled with 78 different types from 13 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Areas.HelpPage">
       <Types>
        <Type Name="ApiDescriptionExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'ApiDescriptionExtensions'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetFriendlyId(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="ApiDescriptionExtensions.cs" Line="17">In externally visible method 'ApiDescriptionExtensions.GetFriendlyId(this ApiDescription)', validate parameter 'description' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageAreaRegistration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterArea(System.Web.Mvc.AreaRegistrationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageAreaRegistration.cs" Line="18">In externally visible method 'HelpPageAreaRegistration.RegisterArea(AreaRegistrationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageConfigurationExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="220">Correct the spelling of 'Api' in member name 'HelpPageConfigurationExtensions.GetHelpPageApiModel(this HttpConfiguration, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="220">In method 'HelpPageConfigurationExtensions.GetHelpPageApiModel(this HttpConfiguration, string)', correct the spelling of 'api' in parameter name 'apiDescriptionId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="223">In externally visible method 'HelpPageConfigurationExtensions.GetHelpPageApiModel(this HttpConfiguration, string)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="181">In externally visible method 'HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(this HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="206">In externally visible method 'HelpPageConfigurationExtensions.GetModelDescriptionGenerator(this HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="30">In externally visible method 'HelpPageConfigurationExtensions.SetDocumentationProvider(this HttpConfiguration, IDocumentationProvider)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,WorldofWords.Areas.HelpPage.HelpPageSampleGenerator)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="HelpPageConfigurationExtensions.cs" Line="193">In externally visible method 'HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(this HttpConfiguration, HelpPageSampleGenerator)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HelpPageSampleGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetSample(System.Web.Http.Description.ApiDescription,WorldofWords.Areas.HelpPage.SampleDirection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="91">In method 'HelpPageSampleGenerator.GetSample(ApiDescription, SampleDirection)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSampleRequests(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="70">In method 'HelpPageSampleGenerator.GetSampleRequests(ApiDescription)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSampleResponses(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="80">In method 'HelpPageSampleGenerator.GetSampleResponses(ApiDescription)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="216">In method 'HelpPageSampleGenerator.ResolveHttpRequestMessageType(ApiDescription)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="217">In externally visible method 'HelpPageSampleGenerator.ResolveHttpRequestMessageType(ApiDescription)', validate parameter 'api' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,WorldofWords.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection`1&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="235">In method 'HelpPageSampleGenerator.ResolveType(ApiDescription, string, string, IEnumerable&lt;string&gt;, SampleDirection, out Collection&lt;MediaTypeFormatter&gt;)', correct the spelling of 'api' in parameter name 'api' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="HelpPageSampleGenerator.cs" Line="325">In externally visible method 'HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(MediaTypeFormatter, object, Type, MediaTypeHeaderValue)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImageSample" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\SampleGeneration" File="ImageSample.cs" Line="14">In method 'ImageSample.ImageSample(string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Src" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Src' in member name 'ImageSample.Src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="XmlDocumentationProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDocumentation(System.Reflection.MemberInfo)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="XmlDocumentationProvider.cs" Line="78">In externally visible method 'XmlDocumentationProvider.GetDocumentation(MemberInfo)', validate parameter 'member' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage" File="XmlDocumentationProvider.cs" Line="40">In externally visible method 'XmlDocumentationProvider.GetDocumentation(HttpControllerDescriptor)', validate parameter 'controllerDescriptor' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Areas.HelpPage.Controllers">
       <Types>
        <Type Name="HelpController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Api(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\Controllers" File="HelpController.cs" Line="30">Correct the spelling of 'Api' in member name 'HelpController.Api(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\Controllers" File="HelpController.cs" Line="30">In method 'HelpController.Api(string)', correct the spelling of 'api' in parameter name 'apiId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Areas.HelpPage.ModelDescriptions">
       <Types>
        <Type Name="ModelDescriptionGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetOrCreateModelDescription(System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ModelName" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Areas\HelpPage\ModelDescriptions" File="ModelDescriptionGenerator.cs" Line="129">Correct the spelling of the unrecognized token 'ModelName' in the literal '"\'. Use the [ModelName] attribute to change the model name for at least one of t..."'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Areas.HelpPage.Models">
       <Types>
        <Type Name="HelpPageApiModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'HelpPageApiModel'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ApiDescription" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in member name 'HelpPageApiModel.ApiDescription' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Controllers">
       <Types>
        <Type Name="AccountController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddExternalLogin(WorldofWords.Models.AddExternalLoginBindingModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'AccountController.AddExternalLogin(AddExternalLoginBindingModel)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExternalLogin(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'AccountController.GetExternalLogin(string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'AccountController.GetExternalLogin(string, string)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExternalLogins(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="AccountController.cs" Line="277">Replace method 'AccountController.GetExternalLogins(string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="AccountController.cs" Line="277">Modify 'AccountController.GetExternalLogins(string, bool)' to call 'Uri.Uri(Uri, Uri)' instead of 'Uri.Uri(Uri, string)'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="AccountController.cs" Line="277">Change the type of parameter 'returnUrl' of method 'AccountController.GetExternalLogins(string, bool)' from string to System.Uri, or provide an overload of 'AccountController.GetExternalLogins(string, bool)', that allows 'returnUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetManageInfo(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'AccountController.GetManageInfo(string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'returnUrl' of method 'AccountController.GetManageInfo(string, bool)' from string to System.Uri, or provide an overload of 'AccountController.GetManageInfo(string, bool)', that allows 'returnUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="AccountController.cs" Line="50">Change 'AccountController.GetUserInfo()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Logout()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Logout" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="AccountController.cs" Line="64">Replace the term 'Logout' in member name 'AccountController.Logout()' with the preferred alternate 'LogOff'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveLogin(WorldofWords.Models.RemoveLoginBindingModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'AccountController.RemoveLogin(RemoveLoginBindingModel)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BaseController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetUserId()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="BaseController.cs" Line="19">The 'this' parameter (or 'Me' in Visual Basic) of 'BaseController.GetUserId()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="BaseController.cs" Line="23">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'BaseController.GetUserId()' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CourseController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetStudentCourses()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="CourseController.cs" Line="28">Change 'List&lt;CourseModel&gt;' in 'CourseController.GetStudentCourses()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="CourseController.cs" Line="28">Change 'CourseController.GetStudentCourses()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTeacherCourses()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="CourseController.cs" Line="34">Change 'List&lt;CourseModel&gt;' in 'CourseController.GetTeacherCourses()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="CourseController.cs" Line="34">Change 'CourseController.GetTeacherCourses()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnrollmentController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#EnrollUsersToGroup(WorldOfWords.API.Models.UsersForEnrollmentModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="EnrollmentController.cs" Line="64">Method 'EnrollmentController.EnrollUsersToGroup(UsersForEnrollmentModel)' passes parameter name 'data' as the 'message' argument to a 'ArgumentNullException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="EnrollmentController.cs" Line="64">Method 'EnrollmentController.EnrollUsersToGroup(UsersForEnrollmentModel)' passes 'Parameter could not be null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByGroupId(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="EnrollmentController.cs" Line="38">Change 'List&lt;EnrollmentWithProgressModel&gt;' in 'EnrollmentController.GetByGroupId(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUsersNotBelongingToGroup(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="EnrollmentController.cs" Line="54">Change 'List&lt;UserForListingModel&gt;' in 'EnrollmentController.GetUsersNotBelongingToGroup(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GlobalDictionaryController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(WorldOfWords.API.Models.IWordTranslationMapper,WorldOfWords.Domain.Services.IWordTranslationService)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GlobalDictionaryController.cs" Line="16">In member 'GlobalDictionaryController.GlobalDictionaryController(IWordTranslationMapper, IWordTranslationService)', remove the underscores from parameter name '_wordTranslationMapper'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GlobalDictionaryController.cs" Line="16">In member 'GlobalDictionaryController.GlobalDictionaryController(IWordTranslationMapper, IWordTranslationService)', remove the underscores from parameter name '_wordTranslationService'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameterAbbreviation" Certainty="85" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GlobalDictionaryController.cs" Line="28">In member 'GlobalDictionaryController.Get(int)', correct the casing of 'ID' in parameter name 'languageID' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GlobalDictionaryController.cs" Line="23">Change 'List&lt;WordTranslationImportModel&gt;' in 'GlobalDictionaryController.Get(int, int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBySearchValue(System.String,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GlobalDictionaryController.cs" Line="38">Change 'List&lt;WordTranslationModel&gt;' in 'GlobalDictionaryController.GetBySearchValue(string, int, int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GroupController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(WorldOfWords.Domain.Services.IGroupService,WorldOfWords.API.Models.IGroupForListingMapper,WorldOfWords.Domain.Services.IEnrollmentService,WorldOfWords.Domain.Services.IWordProgressService,WorldOfWords.Domain.Services.IWordSuiteService,WorldOfWords.Domain.Services.ICourseService,WorldOfWords.API.Models.ICourseForGroupMapper,WorldOfWords.API.Models.IGroupMapper)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="wordsuite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="23">In method 'GroupController.GroupController(IGroupService, IGroupForListingMapper, IEnrollmentService, IWordProgressService, IWordSuiteService, ICourseService, ICourseForGroupMapper, IGroupMapper)', correct the spelling of 'wordsuite' in parameter name 'wordsuiteService' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="38">Change 'List&lt;GroupForListingModel&gt;' in 'GroupController.Get()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCourses()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="55">Change 'List&lt;CourseForGroupModel&gt;' in 'GroupController.GetCourses()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="55">Change 'GroupController.GetCourses()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(WorldOfWords.API.Models.GroupModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Web.Http.ApiController.BadRequest(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="72">Method 'GroupController.Post(GroupModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Group ,  already exist!".</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="63">Method 'GroupController.Post(GroupModel)' passes parameter name 'newGroup' as the 'message' argument to a 'ArgumentNullException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="63">Method 'GroupController.Post(GroupModel)' passes 'Parameter could not be null' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="GroupController.cs" Line="72">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'GroupController.Post(GroupModel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LoginController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'LoginController' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RegisterController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConfirmEmail(System.Int32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="RegisterController.cs" Line="66">Replace method 'RegisterController.ConfirmEmail(int, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.Web.Http.ApiController.BadRequest(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="RegisterController.cs" Line="77">Method 'RegisterController.ConfirmEmail(int, string)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Invalid data".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TrainingWordSuiteController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CheckTask(WorldOfWords.API.Models.TrainingWordSuiteModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="TrainingWordSuiteController.cs" Line="93">In externally visible method 'TrainingWordSuiteController.CheckTask(TrainingWordSuiteModel)', validate parameter 'answer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UsersListController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(WorldOfWords.API.Models.IUserForListOfUsersMapper,WorldOfWords.Domain.Services.IServices.IUserService)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="usermapper" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="18">In method 'UsersListController.UsersListController(IUserForListOfUsersMapper, IUserService)', correct the spelling of 'usermapper' in parameter name 'usermapper' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="userservice" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="18">In method 'UsersListController.UsersListController(IUserForListOfUsersMapper, IUserService)', correct the spelling of 'userservice' in parameter name 'userservice' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="25">Change 'List&lt;UserForListOfUsersModel&gt;' in 'UsersListController.Get()' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="30">Change 'List&lt;UserForListOfUsersModel&gt;' in 'UsersListController.Get(int, int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="roleid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="30">In method 'UsersListController.Get(int, int, int)', correct the spelling of 'roleid' in parameter name 'roleid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="users" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="31">'UsersListController.Get(int, int, int)' declares a variable, 'users', of type 'List&lt;User&gt;', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Get(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="41">Change 'List&lt;UserForListOfUsersModel&gt;' in 'UsersListController.Get(string, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="namevaluetosearch" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="41">In method 'UsersListController.Get(string, int)', correct the spelling of 'namevaluetosearch' in parameter name 'namevaluetosearch' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="roleid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="UsersListController.cs" Line="41">In method 'UsersListController.Get(string, int)', correct the spelling of 'roleid' in parameter name 'roleid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WordsController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.String,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordsController.cs" Line="42">Change 'List&lt;WordModel&gt;' in 'WordsController.Get(string, int, int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(WorldOfWords.API.Models.WordModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordsController.cs" Line="49">Method 'WordsController.Post(WordModel)' passes 'empty word model' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WordSuiteController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddWordProgresses(System.Collections.Generic.List`1&lt;WorldOfWords.API.Models.WordProgressModel&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="147">Change 'List&lt;WordProgressModel&gt;' in 'WordSuiteController.AddWordProgresses(List&lt;WordProgressModel&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByID(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberAbbreviation" Certainty="85" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="126">Correct the casing of 'ID' in member name 'WordSuiteController.GetByID(int)' by changing it to 'Id'. 'Id' is an abbreviation and therefore is not subject to acronym casing guidelines.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTeacherWordSuites(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="105">Change 'List&lt;WordSuiteEditModel&gt;' in 'WordSuiteController.GetTeacherWordSuites(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWordSuites(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="115">Change 'List&lt;CourseWordSuiteModel&gt;' in 'WordSuiteController.GetWordSuites(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="118">Method 'WordSuiteController.GetWordSuites(int)' passes 'languageID' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(WorldOfWords.API.Models.WordSuiteEditModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Web.Http.ApiController.BadRequest(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="95">Method 'WordSuiteController.Post(WordSuiteEditModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Failed to add WordTranslations".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="74">Method 'WordSuiteController.Post(WordSuiteEditModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Failed to edit WordSuite".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="84">Method 'WordSuiteController.Post(WordSuiteEditModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Failed to remove WordTranslations".</Issue>
            </Message>
            <Message Id="WordSuite" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="74">Correct the spelling of the unrecognized token 'WordSuite' in the literal '"Failed to edit WordSuite"'.</Issue>
            </Message>
            <Message Id="WordTranslations" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="95">Correct the spelling of the unrecognized token 'WordTranslations' in the literal '"Failed to add WordTranslations"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="84">Correct the spelling of the unrecognized token 'WordTranslations' in the literal '"Failed to remove WordTranslations"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(WorldOfWords.API.Models.WordSuiteModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Web.Http.ApiController.BadRequest(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="47">Method 'WordSuiteController.Post(WordSuiteModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Failed to add WordSuite".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="54">Method 'WordSuiteController.Post(WordSuiteModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Failed to add WordTranslations".</Issue>
            </Message>
            <Message Id="WordSuite" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="47">Correct the spelling of the unrecognized token 'WordSuite' in the literal '"Failed to add WordSuite"'.</Issue>
            </Message>
            <Message Id="WordTranslations" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordSuiteController.cs" Line="54">Correct the spelling of the unrecognized token 'WordTranslations' in the literal '"Failed to add WordTranslations"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#trainingWordSuiteMapper" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'WordSuiteController.trainingWordSuiteMapper' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WordTranslationController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Get(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="132">Change 'List&lt;WordTranslationModel&gt;' in 'WordTranslationController.Get(int)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(System.Collections.Generic.List`1&lt;WorldOfWords.API.Models.WordTranslationImportModel&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="42">Change 'List&lt;WordTranslationImportModel&gt;' in 'WordTranslationController.Post(List&lt;WordTranslationImportModel&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="42">Change 'List&lt;WordTranslationModel&gt;' in 'WordTranslationController.Post(List&lt;WordTranslationImportModel&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="45">In externally visible method 'WordTranslationController.Post(List&lt;WordTranslationImportModel&gt;)', validate parameter 'wordTranslations' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(WorldOfWords.API.Models.SearchWordTranslationModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="113">Change 'List&lt;WordTranslationModel&gt;' in 'WordTranslationController.Post(SearchWordTranslationModel)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Post(WorldOfWords.API.Models.WordTranslationImportModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Web.Http.ApiController.BadRequest(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="107">Method 'WordTranslationController.Post(WordTranslationImportModel)' passes a literal string as parameter 'message' of a call to 'ApiController.BadRequest(string)'. Retrieve the following string(s) from a resource table instead: "Such wordtranslation exists".</Issue>
            </Message>
            <Message Id="wordtranslation" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="98">In method 'WordTranslationController.Post(WordTranslationImportModel)', correct the spelling of 'wordtranslation' in parameter name 'wordtranslation' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="100">Method 'WordTranslationController.Post(WordTranslationImportModel)' passes 'word translation model can't be empty' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="wordtranslation" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="107">Correct the spelling of the unrecognized token 'wordtranslation' in the literal '"Such wordtranslation exists"'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Controllers" File="WordTranslationController.cs" Line="103">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'WordTranslationController.Post(WordTranslationImportModel)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Models">
       <Types>
        <Type Name="AddExternalLoginBindingModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'AddExternalLoginBindingModel' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ExternalLoginViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'ExternalLoginViewModel' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Url" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'ExternalLoginViewModel.Url' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ManageInfoViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExternalLoginProviders" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'ManageInfoViewModel.ExternalLoginProviders' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LocalLoginProvider" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'ManageInfoViewModel.LocalLoginProvider' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RemoveLoginBindingModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'RemoveLoginBindingModel' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LoginProvider" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'RemoveLoginBindingModel.LoginProvider' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserInfoViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LoginProvider" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'UserInfoViewModel.LoginProvider' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UserLoginInfoViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'UserLoginInfoViewModel' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LoginProvider" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'UserLoginInfoViewModel.LoginProvider' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Providers">
       <Types>
        <Type Name="ApplicationOAuthProvider" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Auth" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Auth' in type name 'ApplicationOAuthProvider'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#TokenEndpoint(Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Providers" File="ApplicationOAuthProvider.cs" Line="52">In externally visible method 'ApplicationOAuthProvider.TokenEndpoint(OAuthTokenEndpointContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Providers" File="ApplicationOAuthProvider.cs" Line="63">In externally visible method 'ApplicationOAuthProvider.ValidateClientAuthentication(OAuthValidateClientAuthenticationContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateClientRedirectUri(Microsoft.Owin.Security.OAuth.OAuthValidateClientRedirectUriContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Providers" File="ApplicationOAuthProvider.cs" Line="72">Modify 'ApplicationOAuthProvider.ValidateClientRedirectUri(OAuthValidateClientRedirectUriContext)' to call 'Uri.Uri(Uri, Uri)' instead of 'Uri.Uri(Uri, string)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Providers" File="ApplicationOAuthProvider.cs" Line="73">In externally visible method 'ApplicationOAuthProvider.ValidateClientRedirectUri(OAuthValidateClientRedirectUriContext)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Results">
       <Types>
        <Type Name="ChallengeResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.Web.Http.ApiController)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Results" File="ChallengeResult.cs" Line="11">In member 'ChallengeResult.ChallengeResult(string, ApiController)', replace the term 'login' in parameter name 'loginProvider' with the preferred alternate 'logOn'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Results" File="ChallengeResult.cs" Line="14">In externally visible method 'ChallengeResult.ChallengeResult(string, ApiController)', validate parameter 'controller' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteAsync(System.Threading.CancellationToken)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Results" File="ChallengeResult.cs" Line="24">In method 'ChallengeResult.ExecuteAsync(CancellationToken)', call System.IDisposable.Dispose on object 'response' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoginProvider" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'ChallengeResult.LoginProvider' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="WorldofWords.Utils">
       <Types>
        <Type Name="FileActionResult" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ExecuteAsync(System.Threading.CancellationToken)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="FileActionResult.cs" Line="20">In method 'FileActionResult.ExecuteAsync(CancellationToken)', call System.IDisposable.Dispose on object '&lt;&gt;g__initLocal0' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WordSuitePdfGenerator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WorldofWords.Utils.IPdfGenerator`1&lt;WorldOfWords.Domain.Models.WordSuite&gt;.GetTaskInPdf(WorldOfWords.Domain.Models.WordSuite)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="116">In method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)', object 'document' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'document' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="148">Object 'stream' can be disposed more than once in method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 148</Issue>
            </Message>
            <Message Id="WorldofWords.Utils.WordSuitePdfGenerator.TextCell(System.String,iTextSharp.text.Font)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="132">Method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)' passes a literal string as parameter 'text' of a call to 'WordSuitePdfGenerator.TextCell(string, Font)'. Retrieve the following string(s) from a resource table instead: "#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="133">Method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)' passes a literal string as parameter 'text' of a call to 'WordSuitePdfGenerator.TextCell(string, Font)'. Retrieve the following string(s) from a resource table instead: "Ukrainian".</Issue>
            </Message>
            <Message Id="writer" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="118">'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)' declares a variable, 'writer', of type 'PdfWriter', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="139">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="121">In externally visible method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetTaskInPdf(WordSuite)', validate parameter 'source' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WorldofWords.Utils.IPdfGenerator`1&lt;WorldOfWords.Domain.Models.WordSuite&gt;.GetWordsInPdf(WorldOfWords.Domain.Models.WordSuite)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="56">In method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)', object 'document' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'document' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="88">Object 'stream' can be disposed more than once in method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 88</Issue>
            </Message>
            <Message Id="WorldofWords.Utils.WordSuitePdfGenerator.TextCell(System.String,iTextSharp.text.Font)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="72">Method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)' passes a literal string as parameter 'text' of a call to 'WordSuitePdfGenerator.TextCell(string, Font)'. Retrieve the following string(s) from a resource table instead: "#".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="74">Method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)' passes a literal string as parameter 'text' of a call to 'WordSuitePdfGenerator.TextCell(string, Font)'. Retrieve the following string(s) from a resource table instead: "Ukrainian".</Issue>
            </Message>
            <Message Id="writer" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="58">'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)' declares a variable, 'writer', of type 'PdfWriter', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="79">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2015-08-29 14:49:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\SoftServe\LV-150.NET\World\WorldofWords\WorldofWords\Utils" File="WordSuitePdfGenerator.cs" Line="61">In externally visible method 'WordSuitePdfGenerator.IPdfGenerator&lt;WordSuite&gt;.GetWordsInPdf(WordSuite)', validate parameter 'source' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 148</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="MemberAbbreviation">Correct the casing of '{0}' in member name {1} by changing it to '{2}'. '{2}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Resolution Name="MemberParameterAbbreviation">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'. '{3}' is an abbreviation and therefore is not subject to acronym casing guidelines.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Remove the underscores from namespace name '{0}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
   <Name>Mark attributes with AttributeUsageAttribute</Name>
   <Description>The AttributeUsage attribute specifies the targets that are valid for the attribute (see System.AttributeTargets), whether an attribute can appear on a target more than once, and whether the attribute is inheritable.</Description>
   <Resolution Name="Inherited">Even though attribute {0} inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182158.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234">
   <Name>Pass System.Uri objects instead of strings</Name>
   <Description>If there are two overloads one taking System.Uri and one taking System.String, library code should never call the string-based overload.</Description>
   <Resolution Name="Default">Modify {0} to call {1} instead of {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182360.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, replace the term '{1}' in parameter name {2} with the preferred alternate '{3}'.</Resolution>
   <Resolution Name="Type">Replace the term '{0}' in type name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
